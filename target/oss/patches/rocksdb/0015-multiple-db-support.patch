From 0fc7a458b33d69bfd11ba7f9444e36c9199f86fb Mon Sep 17 00:00:00 2001
From: Jian Liang <jian.l@ssi.samsung.com>
Date: Tue, 1 Dec 2020 11:20:03 -0800
Subject: [PATCH 15/18] * multiple db support * bg job core config setting.

---
 db/dss_kv2blk_c.cc | 21 +++++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/db/dss_kv2blk_c.cc b/db/dss_kv2blk_c.cc
index 56394c0..5eb95f5 100644
--- a/db/dss_kv2blk_c.cc
+++ b/db/dss_kv2blk_c.cc
@@ -84,6 +84,9 @@ int dss_rocksdb_iter_read(void * ctx, void ** piter,
 int dss_rocksdb_iter_end(void *ctx, void * iter);
 
 namespace rocksdb {
+
+uint32_t g_bg_coreid = 0;
+
 struct RandomReadContext;
 struct AsyncRdQueue_s{
     std::queue<struct RandomReadContext *> queue;
@@ -197,15 +200,20 @@ void *_dss_rocksdb_open(void *arg)
     rocksdb::DB* db;
     rocksdb::Options options;
 
-    std::string dbname = "/mnt/nvme0";
+    std::string dbname = "/mnt/";
     std::string cpumask = "0x1";  //for core 0
-    std::string nvme_conf = "/usr/local/etc/spdk/nvme0.conf";
-    std::string spdk_bdev;
+    std::string nvme_conf = "/usr/local/etc/spdk/nvme5.conf";
+    std::string spdk_bdev="";
     uint64_t cache_size_in_mb = 8192;
 
+    if(!rocksdb::g_bg_coreid){
+        rocksdb::g_bg_coreid = g_dragonfly->rdb_bg_core_start;
+    }
+
     spdk_bdev += dss_dev->rdb_handle->dev_name;
+    dbname += spdk_bdev;
 
-	//printf("Creating new dss ennv\n");
+	printf("Creating new dss env for dbname %s\n", dbname.c_str());
 	rocksdb::Env* dss_env = rocksdb::NewDssEnv(rocksdb::Env::Default(),
         dbname, cpumask,
         nvme_conf, spdk_bdev,
@@ -214,7 +222,7 @@ void *_dss_rocksdb_open(void *arg)
 		(void *)dss_dev->rdb_handle->dev_channel,
 		dss_dev->icore);
 
-    dss_env->SetBackgroundThreads(2);
+    //dss_env->SetBackgroundThreads(2);
 	//printf("Created new dss ennv\n");
     options.env = dss_env;
     options.create_if_missing = true;
@@ -223,7 +231,7 @@ void *_dss_rocksdb_open(void *arg)
     options.max_subcompactions = 4;
     options.enable_write_thread_adaptive_yield = false;
     */
-
+    options.max_background_jobs = g_dragonfly->rdb_bg_job_cnt;
     options.max_write_buffer_number = 40;
     options.num_levels = 2;
     options.compression = rocksdb::kNoCompression;
@@ -389,6 +397,7 @@ int dss_rocksdb_put(void *ctx, void *key, uint32_t klen, void *value, uint32_t v
 		rocksdb::WriteOptions write_options = rocksdb::WriteOptions();
 		write_options.sync = false;
 		write_options.disableWAL = false;
+		printf("dss_rocksdb_put key: %s\n", (char *)key);
 		//printf("dss_rocksdb_put with wal=%d\n", !write_options.disableWAL);
 		s = db->Put(write_options, rocksdb::Slice((char *)key, klen), rocksdb::Slice((char *)value, vlen));
 		if (!s.ok()) {
-- 
1.8.3.1

