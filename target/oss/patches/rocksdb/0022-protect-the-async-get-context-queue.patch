From 72c32b5ce31028669e6ceaad9feb2dc37b5d9428 Mon Sep 17 00:00:00 2001
From: Jian Liang <jian.l@ssi.samsung.com>
Date: Wed, 6 Jan 2021 13:03:55 -0800
Subject: [PATCH 22/33] * protect the async get context queue

---
 db/dss_kv2blk_c.cc | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/db/dss_kv2blk_c.cc b/db/dss_kv2blk_c.cc
index f2b4c43..d61aeea 100644
--- a/db/dss_kv2blk_c.cc
+++ b/db/dss_kv2blk_c.cc
@@ -174,9 +174,9 @@ struct RandomReadContext : public async::AsyncStatusCapture {
 		//printf("rocksdb async get done\n");
 	 }
 
-     //pthread_mutex_lock(&ctx_queue_->mutex);
+     pthread_mutex_lock(&ctx_queue_->mutex);
      ctx_queue_->queue.push(this);
-     //pthread_mutex_unlock(&ctx_queue_->mutex);
+     pthread_mutex_unlock(&ctx_queue_->mutex);
 
      return status;
     }
@@ -433,7 +433,7 @@ void dss_rocksdb_get_async(void * inst_ctx, void *rdb_ctx,
         }
         rocksdb::Slice key_async_get((const char *)key, klen);
         rocksdb::RandomReadContext *RdCtx = nullptr;
-        //pthread_mutex_lock(&RdCtxQueue->mutex);
+        pthread_mutex_lock(&RdCtxQueue->mutex);
         if(!RdCtxQueue->queue.empty()){
             RdCtx = RdCtxQueue->queue.front();
             assert(RdCtx);
@@ -443,7 +443,7 @@ void dss_rocksdb_get_async(void * inst_ctx, void *rdb_ctx,
             //printf("RdCtxQueue is Empty\n");
             assert(false);
         }
-        //pthread_mutex_unlock(&RdCtxQueue->mutex);
+        pthread_mutex_unlock(&RdCtxQueue->mutex);
         //rocksdb::RandomReadContext *RdCtx = new rocksdb::RandomReadContext(0, cb, cb_arg);
                 //pickup available ctx (no async pending io ...) TBD
         RdCtx->SetKey(key_async_get);
-- 
1.8.3.1

