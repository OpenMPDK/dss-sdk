From 3c65ff9df077e0b84bf5ae7e479451a93ea794da Mon Sep 17 00:00:00 2001
From: Benixon Arul dhas <benixon.a@samsung.com>
Date: Wed, 18 Nov 2020 11:48:25 -0800
Subject: [PATCH 11/36] Fixed rockdb shutdown issues

---
 db/dss_kv2blk_c.cc             | 6 +++++-
 env/env_posix.cc               | 3 +++
 include/rocksdb/dss_kv2blk_c.h | 2 +-
 3 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/db/dss_kv2blk_c.cc b/db/dss_kv2blk_c.cc
index 66bb8bf..a56a15f 100644
--- a/db/dss_kv2blk_c.cc
+++ b/db/dss_kv2blk_c.cc
@@ -228,6 +228,7 @@ void *_dss_rocksdb_open(void *arg)
     }
 
 	dss_dev->rdb_handle->rdb_db_handle = db;
+	dss_dev->rdb_handle->rdb_env = (void *)dss_env;
 	DFLY_ASSERT(dss_dev->rdb_handle->rdb_db_handle);
 
 	_dev_init_done(dss_dev->rdb_handle->tmp_init_back_ptr);
@@ -247,11 +248,14 @@ void *dss_rocksdb_open(struct dfly_io_device_s *dss_dev)
 	pthread_create(&th, &attr, &_dss_rocksdb_open, dss_dev);
 }
 
-void dss_rocksdb_close(void *db)
+void dss_rocksdb_close(void *db, void *rdb_env)
 {
 	rocksdb::DB *dB = (rocksdb::DB *)db;
+	rocksdb::Env* env = (rocksdb::Env*)rdb_env;
 	printf("dss_rocksdb_close %p start ...\n", dB);
+	env->WaitForJoin();
 	delete dB;
+	delete env;
 	printf("dss_rocksdb_close %p done\n");
 	return;
 }
diff --git a/env/env_posix.cc b/env/env_posix.cc
index 7f2bc3b..eee478b 100644
--- a/env/env_posix.cc
+++ b/env/env_posix.cc
@@ -921,6 +921,9 @@ void PosixEnv::StartThread(void (*function)(void* arg), void* arg) {
 }
 
 void PosixEnv::WaitForJoin() {
+  for (int pool_id = 0; pool_id < Env::Priority::TOTAL; ++pool_id) {
+    thread_pools_[pool_id].WaitForJobsAndJoinAllThreads();
+  }
   for (const auto tid : threads_to_join_) {
     pthread_join(tid, nullptr);
   }
diff --git a/include/rocksdb/dss_kv2blk_c.h b/include/rocksdb/dss_kv2blk_c.h
index 30ad1e8..1a85813 100644
--- a/include/rocksdb/dss_kv2blk_c.h
+++ b/include/rocksdb/dss_kv2blk_c.h
@@ -9,7 +9,7 @@ extern "C" {
 #endif
 
 extern void* dss_rocksdb_open(struct dfly_io_device_s *dss_dev);
-extern void dss_rocksdb_close(void* db);
+extern void dss_rocksdb_close(void* db, void *rdb_env);
 extern int dss_rocksdb_put(void *ctx, void *key, uint32_t klen, void *value, uint32_t vlen);
 extern void dss_rocksdb_get_async(void * inst_ctx, void *ctx, void *key, size_t klen, void *value, uint32_t vbuf_len, void *cb, void *cb_arg);
 extern int dss_rocksdb_delete(void *ctx, void *key, uint32_t klen);
-- 
1.8.3.1

