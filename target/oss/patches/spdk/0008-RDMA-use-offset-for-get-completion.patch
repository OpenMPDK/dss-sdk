From ebdc1ca8b9d6309a8fc3fe707926d8c6a04dd904 Mon Sep 17 00:00:00 2001
From: Benixon Arul dhas <benixon.a@samsung.com>
Date: Mon, 9 Nov 2020 15:21:45 -0800
Subject: [PATCH 08/31] RDMA use offset for get completion

---
 lib/nvmf/rdma.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/lib/nvmf/rdma.c b/lib/nvmf/rdma.c
index bab5b17..f77b2bd 100644
--- a/lib/nvmf/rdma.c
+++ b/lib/nvmf/rdma.c
@@ -865,6 +865,7 @@ dfly_rdma_setup_data_transfer_out(struct spdk_nvmf_rdma_qpair *rqpair, struct sp
 	struct dfly_request *dfly_req = rdma_req->req.dreq;
 
 	uint32_t rem_data_length,sge_len, sge_index;
+	uint64_t data_offset;
 
 	if (rdma_req->req.cmd->nvmf_cmd.opcode == SPDK_NVME_OPC_FABRIC ||
 			(rqpair->qpair.dqpair->dss_enabled == false) ||
@@ -875,10 +876,16 @@ dfly_rdma_setup_data_transfer_out(struct spdk_nvmf_rdma_qpair *rqpair, struct sp
 	rem_data_length = rsp->cdw0;
 	sge_index = 0;
 
+	data_offset = dfly_req->req_value.offset;
 	switch(rdma_req->req.cmd->nvme_cmd.opc) {
 		case SPDK_NVME_OPC_SAMSUNG_KV_RETRIEVE:
+			assert(rdma_req->data.wr.sg_list[sge_index].length > data_offset);
 			while(rem_data_length && (sge_index < rdma_req->data.wr.num_sge)) {
 				sge_len = rdma_req->data.wr.sg_list[sge_index].length;
+				if(data_offset > 0) {
+					sge_len -= data_offset;
+					rdma_req->data.wr.sg_list[sge_index].addr += data_offset;
+				}
 				if(rem_data_length > sge_len) {
 					sge_index++;
 					rem_data_length -= sge_len;
-- 
1.8.3.1

