From 6154001e033e4a694a19d3312d3504ed8414c7c6 Mon Sep 17 00:00:00 2001
From: Benixon Arul dhas <benixon.a@samsung.com>
Date: Wed, 22 Jun 2022 13:23:33 -0700
Subject: [PATCH 65/66] RDD - Fix value offset check on completion

---
 lib/nvmf/rdma.c | 22 ++++++++++++++--------
 1 file changed, 14 insertions(+), 8 deletions(-)

diff --git a/lib/nvmf/rdma.c b/lib/nvmf/rdma.c
index c5a2d3405..048f9401a 100644
--- a/lib/nvmf/rdma.c
+++ b/lib/nvmf/rdma.c
@@ -992,14 +992,20 @@ int dfly_rdma_setup_post_rdd_out(struct spdk_nvmf_rdma_request *rdma_req)
 	data_offset = dfly_req->req_value.offset;
 	data_length = rsp->cdw0;
 
-	DFLY_DEBUGLOG(DSS_RDD, "key %s data offset %d\n", dfly_req->req_key.key, dfly_req->req_value.offset);
-	if(data_offset + data_length < dfly_req->rdd_info.payload_len) {
-		dfly_req->rdd_info.cmem += data_offset;
-		dfly_req->rdd_info.payload_len = data_length;
-	} else if (data_offset != 0) {
-		dfly_req->rdd_info.cmem += data_offset;
-		//dfly_req->rdd_info.payload_len -= data_offset;
-	} //else info is already setup
+    DFLY_DEBUGLOG(DSS_RDD, "key %s data offset %d rdd plen %d vlen %d\n", dfly_req->req_key.key, \
+            dfly_req->req_value.offset, dfly_req->rdd_info.payload_len, dfly_req->req_value.length);
+
+    DFLY_ASSERT(data_length <= dfly_req->rdd_info.payload_len);
+    if(data_length > dfly_req->rdd_info.payload_len) {
+        data_length = dfly_req->rdd_info.payload_len;
+    }
+    DFLY_ASSERT(data_offset < NVMF_DATA_BUFFER_ALIGNMENT);
+
+	dfly_req->rdd_info.cmem += data_offset;
+
+    if(data_length != dfly_req->rdd_info.payload_len) {
+        dfly_req->rdd_info.payload_len = data_length;
+    }
 
 	rc = rdd_post_req2queue(g_dragonfly->rdd_ctx, dfly_req->rdd_info.qhandle, dfly_req);
 
-- 
2.24.3

