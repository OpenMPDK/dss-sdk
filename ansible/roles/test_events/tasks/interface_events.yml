- block:

  - include_tasks: inspect_interface.yml
    loop: "{{ ansible_interfaces }}"

  when: inventory_hostname in groups['targets']

- name: Verify event NETWORK_DOWN
  shell: "python3 {{ event_verification_script }} --expected_event_name NETWORK_DOWN --expected_count 1 --timeout {{event_timeout}}"
  when: inventory_hostname in groups['fm_hosts'] and isLeader
  register: python_cmd
  async: "{{event_timeout}}"
  poll: 0 

- name: Bring down test interface {{ ethtest_interface }}
  shell: ifdown {{ ethtest_interface }}
  when: ethtest_target_node is defined and ethtest_interface is defined and inventory_hostname == ethtest_target_node

- name: "Check async task: {{ event_verification_script }} --expected_event_name NETWORK_DOWN --expected_count 1 --timeout {{event_timeout}}"
  async_status:
    jid: "{{ python_cmd.ansible_job_id }}"
  register: async_result
  until: async_result.finished
  retries: "{{retries}}"
  delay: "{{ retry_delay }}"
  when: inventory_hostname in groups['fm_hosts'] and isLeader

- name: Verify event NETWORK_UP
  shell: "python3 {{ event_verification_script }} --expected_event_name NETWORK_UP --expected_count 1 --timeout {{event_timeout}}"
  when: inventory_hostname in groups['fm_hosts'] and isLeader
  register: python_cmd
  async: "{{event_timeout}}"
  poll: 0 

- name: Bring up test interface {{ ethtest_interface }}
  shell: ifup {{ ethtest_interface }}
  when: ethtest_target_node is defined and ethtest_interface is defined and inventory_hostname == ethtest_target_node

- name: "Check async task: {{ event_verification_script }} --expected_event_name NETWORK_UP --expected_count 1 --timeout {{event_timeout}}"
  async_status:
    jid: "{{ python_cmd.ansible_job_id }}"
  register: async_result
  until: async_result.finished
  retries: "{{retries}}"
  delay: "{{ retry_delay }}"
  when: inventory_hostname in groups['fm_hosts'] and isLeader