- block:

  - set_fact:
      isLeader: false

  - name: etcdctl find leader
    shell: "etcdctl member list | grep {{ ansible_default_ipv4.address }}"
    register: output
    environment: 
      ETCDCTL_API: 2

  - set_fact:
      isLeader: true
    when: output.stdout.find('isLeader=true') != -1

  when: inventory_hostname in groups['fm_hosts']


- block:
  - set_fact: { dfly_config: "{{ lookup('file', 'DFLY_CONFIG') }}" }
  - set_fact:
          dfly_groups: "{{ dfly_config | regex_findall('(?<!#)\\[(?!GLOBAL)(.*?)\\]') }}"
          subsystem_ips: "{{ dfly_config | regex_findall('(?<!#)subsystem_ip_port: *([0-9]+.[0-9]+.[0-9]+.[0-9]+):[0-9]+,') }}"
  - debug:
      var: subsystem_ips
  - debug:
      var: dfly_groups
  run_once: true

- block:

  - include_tasks: agent_events.yml
  - include_tasks: subsystem_events.yml
  - include_tasks: interface_events.yml

  always:

    - name: Bring up interface that was tested {{ ethtest_interface }}
      shell: ifup {{ ethtest_interface }}
      when: ethtest_target_node is defined and ethtest_interface is defined and inventory_hostname == ethtest_target_node

    - name: "Start target services on all targets"
      service:
        name: "{{item}}"
        state: started 
      with_items:
        - nvmf_tgt
        - kv_cli
      when: inventory_hostname in groups['targets']

    - name: "Verify target services are running on all targets"
      command: "systemctl status {{ item }}"
      changed_when: false
      register: service_status
      failed_when: '"Active: active" not in service_status.stdout'
      with_items:
        - nvmf_tgt
        - kv_cli
      when: inventory_hostname in groups['targets']


